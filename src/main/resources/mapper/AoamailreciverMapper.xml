<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxl.mapper.AoamailreciverMapper">
  <resultMap id="BaseResultMap" type="com.zxl.entity.Aoamailreciver">
    <id column="pk_id" jdbcType="BIGINT" property="pkId" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="mail_id" jdbcType="BIGINT" property="mailId" />
    <result column="mail_reciver_id" jdbcType="BIGINT" property="mailReciverId" />
    <result column="is_star" jdbcType="INTEGER" property="isStar" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, is_read, mail_id, mail_reciver_id, is_star, is_del
  </sql>
  <select id="selectByExample" parameterType="com.zxl.entity.AoamailreciverExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aoamailreciver
    where pk_id = #{pkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from aoamailreciver
    where pk_id = #{pkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zxl.entity.AoamailreciverExample">
    delete from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zxl.entity.Aoamailreciver">
    insert into aoamailreciver (pk_id, is_read, mail_id, 
      mail_reciver_id, is_star, is_del
      )
    values (#{pkId,jdbcType=BIGINT}, #{isRead,jdbcType=INTEGER}, #{mailId,jdbcType=BIGINT}, 
      #{mailReciverId,jdbcType=BIGINT}, #{isStar,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxl.entity.Aoamailreciver">
    insert into aoamailreciver
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="mailId != null">
        mail_id,
      </if>
      <if test="mailReciverId != null">
        mail_reciver_id,
      </if>
      <if test="isStar != null">
        is_star,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=BIGINT},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        #{mailId,jdbcType=BIGINT},
      </if>
      <if test="mailReciverId != null">
        #{mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="isStar != null">
        #{isStar,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zxl.entity.AoamailreciverExample" resultType="java.lang.Long">
    select count(*) from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aoamailreciver
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=BIGINT},
      </if>
      <if test="record.isRead != null">
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
      <if test="record.mailId != null">
        mail_id = #{record.mailId,jdbcType=BIGINT},
      </if>
      <if test="record.mailReciverId != null">
        mail_reciver_id = #{record.mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="record.isStar != null">
        is_star = #{record.isStar,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aoamailreciver
    set pk_id = #{record.pkId,jdbcType=BIGINT},
      is_read = #{record.isRead,jdbcType=INTEGER},
      mail_id = #{record.mailId,jdbcType=BIGINT},
      mail_reciver_id = #{record.mailReciverId,jdbcType=BIGINT},
      is_star = #{record.isStar,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxl.entity.Aoamailreciver">
    update aoamailreciver
    <set>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        mail_id = #{mailId,jdbcType=BIGINT},
      </if>
      <if test="mailReciverId != null">
        mail_reciver_id = #{mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="isStar != null">
        is_star = #{isStar,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxl.entity.Aoamailreciver">
    update aoamailreciver
    set is_read = #{isRead,jdbcType=INTEGER},
      mail_id = #{mailId,jdbcType=BIGINT},
      mail_reciver_id = #{mailReciverId,jdbcType=BIGINT},
      is_star = #{isStar,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.zxl.entity.Aoamailreciver">
    <id column="pk_id" jdbcType="BIGINT" property="pkId" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="mail_id" jdbcType="BIGINT" property="mailId" />
    <result column="mail_reciver_id" jdbcType="BIGINT" property="mailReciverId" />
    <result column="is_star" jdbcType="INTEGER" property="isStar" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, is_read, mail_id, mail_reciver_id, is_star, is_del
  </sql>
  <select id="selectByExample" parameterType="com.zxl.entity.AoamailreciverExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aoamailreciver
    where pk_id = #{pkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from aoamailreciver
    where pk_id = #{pkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zxl.entity.AoamailreciverExample">
    delete from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zxl.entity.Aoamailreciver">
    insert into aoamailreciver (pk_id, is_read, mail_id, 
      mail_reciver_id, is_star, is_del
      )
    values (#{pkId,jdbcType=BIGINT}, #{isRead,jdbcType=INTEGER}, #{mailId,jdbcType=BIGINT}, 
      #{mailReciverId,jdbcType=BIGINT}, #{isStar,jdbcType=INTEGER}, #{isDel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zxl.entity.Aoamailreciver">
    insert into aoamailreciver
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="mailId != null">
        mail_id,
      </if>
      <if test="mailReciverId != null">
        mail_reciver_id,
      </if>
      <if test="isStar != null">
        is_star,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=BIGINT},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        #{mailId,jdbcType=BIGINT},
      </if>
      <if test="mailReciverId != null">
        #{mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="isStar != null">
        #{isStar,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zxl.entity.AoamailreciverExample" resultType="java.lang.Long">
    select count(*) from aoamailreciver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aoamailreciver
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=BIGINT},
      </if>
      <if test="record.isRead != null">
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
      <if test="record.mailId != null">
        mail_id = #{record.mailId,jdbcType=BIGINT},
      </if>
      <if test="record.mailReciverId != null">
        mail_reciver_id = #{record.mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="record.isStar != null">
        is_star = #{record.isStar,jdbcType=INTEGER},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aoamailreciver
    set pk_id = #{record.pkId,jdbcType=BIGINT},
      is_read = #{record.isRead,jdbcType=INTEGER},
      mail_id = #{record.mailId,jdbcType=BIGINT},
      mail_reciver_id = #{record.mailReciverId,jdbcType=BIGINT},
      is_star = #{record.isStar,jdbcType=INTEGER},
      is_del = #{record.isDel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxl.entity.Aoamailreciver">
    update aoamailreciver
    <set>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="mailId != null">
        mail_id = #{mailId,jdbcType=BIGINT},
      </if>
      <if test="mailReciverId != null">
        mail_reciver_id = #{mailReciverId,jdbcType=BIGINT},
      </if>
      <if test="isStar != null">
        is_star = #{isStar,jdbcType=INTEGER},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxl.entity.Aoamailreciver">
    update aoamailreciver
    set is_read = #{isRead,jdbcType=INTEGER},
      mail_id = #{mailId,jdbcType=BIGINT},
      mail_reciver_id = #{mailReciverId,jdbcType=BIGINT},
      is_star = #{isStar,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=INTEGER}
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
</mapper>